<templateSet group="Nate">
  <template name="natecomponent" value="import style from './$Component$.module.css'&#10;import type { CSSProperties, ReactNode } from 'react'&#10;&#10;export type $Component$Props = {&#10;  children: ReactNode&#10;  className?: string&#10;  style?: CSSProperties&#10;  variant?: string&#10;}&#10;&#10;export default function $Component$({&#10;  children,&#10;  className,&#10;  style: inlineStyle,&#10;  variant = 'default',&#10;}: $Component$Props): JSX.Element {&#10;  return (&#10;    &lt;div className={[style.wrapper, style[variant], className].join(' ')} style={inlineStyle}&gt;&#10;      {children}&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" description="TS functional component" toReformat="false" toShortenFQNames="true">
    <variable name="Component" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="natecss" value="/* Small 0-599 */&#10;.wrapper {&#10;}&#10;&#10;/* Medium 600-1023 */&#10;/* @media only screen and (min-width: 600px) {} */&#10;&#10;/* Large 1024-1499 */&#10;/* @media only screen and (min-width: 1024px) {} */&#10;&#10;/* Huge 1500-infinite */&#10;/* @media only screen and (min-width: 1500px) {} */&#10;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="CSS" value="true" />
    </context>
  </template>
</templateSet>