<templateSet group="Nate">
  <template name="nateComponent" value="import style from './common.module.css'&#10;import { useAppSelector as useSel } from '@/store/index'&#10;import type { CSSProperties, ReactNode } from 'react'&#10;&#10;export type Variant = 'default' &#10;&#10;export type Props = {&#10;  children: ReactNode&#10;  &#10;  variant?: Variant&#10;  className?: string&#10;  style?: CSSProperties&#10;}&#10;&#10;export function $Component$({&#10;  children,&#10;  &#10;  variant = 'default',&#10;  className,&#10;  style: inlineStyle,&#10;}: Props): JSX.Element {&#10;  return (&#10;    &lt;div &#10;      className={[style.div, style[variant], className].join(' ')}&#10;      style={inlineStyle}&#10;    &gt;&#10;      {children}&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;" description="TS functional component" toReformat="false" toShortenFQNames="true">
    <variable name="Component" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nateCssBreakpoints" value="/* Small 0-599 */&#10;.wrapper {&#10;  --iconSrc: 'initializedInJs';&#10;  background-color: green;&#10;}&#10;&#10;a.default,&#10;div.default {&#10;  /* prettier-ignore */&#10;}&#10;&#10;/* Medium 600-1023 */&#10;/* @media only screen and (min-width: 600px) {} */&#10;&#10;/* Large 1024-1499 */&#10;/* @media only screen and (min-width: 1024px) {} */&#10;&#10;/* Huge 1500-infinite */&#10;/* @media only screen and (min-width: 1500px) {} */&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="CSS" value="true" />
    </context>
  </template>
  <template name="nateStorybookWithProps" value="import { $Component$ } from '.'&#10;import type { Props } from '.'&#10;import type { Meta, Story } from '@storybook/react'&#10;&#10;const Template: Story&lt;Props&gt; = (args) =&gt; &lt;$Component$ {...args}&gt;Block&lt;/$Component$&gt;&#10;&#10;export const Default = Template.bind({})&#10;Default.args = {}&#10;&#10;const meta: Meta = {&#10;  component: $Component$,&#10;  title: __dirname,&#10;  // parameters: {&#10;  //   actions: {&#10;  //     argTypes: 'onClick',&#10;  //     handles: ['click'],&#10;  //   },&#10;  //   layout: 'fullscreen',&#10;  // },&#10;  // argTypes: {&#10;  //   onClick: { table: { disable: true } },&#10;  // },&#10;  // decorators: [&#10;  //   (Story: () =&gt; JSX.Element): JSX.Element =&gt; {&#10;  //     return (&#10;  //       &lt;div style={wrapperStyle}&gt;&#10;  //         &lt;Story /&gt;&#10;  //       &lt;/div&gt;&#10;  //     )&#10;  //   },&#10;  // ],&#10;}&#10;&#10;export default meta&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="Component" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nateStorybook" value="import { $Component$ } from '.'&#10;import type { Meta } from '@storybook/react'&#10;&#10;export const Default = (): JSX.Element =&gt; &lt;$Component$&gt;&lt;/$Component$&gt;&#10;&#10;const meta: Meta = {&#10;  component: $Component$,&#10;  title: __dirname,&#10;  // parameters: {&#10;  //   actions: {&#10;  //     argTypes: 'onClick',&#10;  //     handles: ['click'],&#10;  //   },&#10;  //   layout: 'fullscreen',&#10;  // },&#10;  // argTypes: {&#10;  //   onClick: { table: { disable: true } },&#10;  // },&#10;  // decorators: [&#10;  //   (Story: () =&gt; JSX.Element): JSX.Element =&gt; {&#10;  //     return (&#10;  //       &lt;div style={wrapperStyle}&gt;&#10;  //         &lt;Story /&gt;&#10;  //       &lt;/div&gt;&#10;  //     )&#10;  //   },&#10;  // ],&#10;}&#10;&#10;export default meta&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="Component" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>